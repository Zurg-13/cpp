#include <QTimer>

#include "ui_WClr.h"
#include "WClr.h"

#include "AdvanceEdit.h"

// Является отмеченным. --------------------------------------------------------
//------------------------------------------------------------------------------
bool WClr::isFixed(void) { return ui->cbFix->isChecked(); }

// Выставить цвет. -------------------------------------------------------------
//------------------------------------------------------------------------------
void WClr::setColor(const QColor &clr) {
    static QString CLR("background-color:%1;");
    ui->lbColor->setStyleSheet(CLR.arg(clr.name()));
    ui->edColor->setText(clr.name());
}// setColor

// Зафиксировать цвет. ---------------------------------------------------------
//------------------------------------------------------------------------------
WClr* WClr::fixed(bool fix) { ui->cbFix->setChecked(fix); return this; }

// Конструктор. ----------------------------------------------------------------
//------------------------------------------------------------------------------
WClr::WClr(QWidget *parent, QColor color)
    : QWidget(parent), ui(new Ui::WClr), color(color)
{
    // Внешний вид.
    ui->setupUi(this);
    ui->edColor->clear();
    this->setColor(this->color);

    // Инициализация.
    connect(ui->edColor, &AdvanceEdit::focused, this, &WClr::on_edColor_focused);

}// WClr

// Деструктор. -----------------------------------------------------------------
//------------------------------------------------------------------------------
WClr::~WClr() { delete ui; }

// Удалить плашку. -------------------------------------------------------------
//------------------------------------------------------------------------------
void WClr::on_btClose_clicked() { emit(remove(this)); }

// Выбрать окно кода цвета. ----------------------------------------------------
//------------------------------------------------------------------------------
void WClr::on_edColor_focused()
    { QTimer::singleShot(0, ui->edColor, &AdvanceEdit::selectAll); }

// Изменить фиксацию. ----------------------------------------------------------
//------------------------------------------------------------------------------
void WClr::on_cbFix_stateChanged(int /*arg*/) { emit change_fix(this); }

//------------------------------------------------------------------------------
